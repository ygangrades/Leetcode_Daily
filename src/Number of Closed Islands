class Solution {
    int [][] dir = new int[][]{
        {-1,0},
        {0,-1},
        {1,0},
        {0,1}};
    private boolean helper(int [][] grid, int i, int j, int m, int n){
        if(i<0 || j<0 || i>=m || j>=n){
            return false;
        }
        if(grid[i][j] ==1){
            return true;
        }
        grid[i][j] = 1;
        boolean land = true;
        for(int[] d : dir){
            land = land & helper(grid,i+d[0],j+d[1],m,n);
        }
        return land;

    }
    public int closedIsland(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int noOfIsland = 0;
        for(int i =0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j] == 0 && helper(grid,i,j,m,n)){
                    noOfIsland++;
                }
            }
        }
        return noOfIsland;
    }
}
